syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "SharedCommunication.proto";

package communication.sec;

// The encrypted messages should be sent as bytes.
// If you see a field type is defined as byte, it indicates
// that the field holds an encrypted message in it.

service SecretCommunicationService {
  rpc GetPublicKey(google.protobuf.Empty) returns (PublicKey);
  rpc createInvoice(InvoicingRequest) returns (InvoicingResponse);
  rpc SearchForRides(communication.SearchRequest) returns (stream communication.Journey);
  rpc SearchForSecretRides(SearchRequest) returns (stream Journey);
}

message PublicKey {
  bytes publicKey = 1;
}

message SearchRequest {
  string from = 1;
  string to = 2;
  google.protobuf.Timestamp startTime = 3;
  google.protobuf.Timestamp endTime = 4;
  bytes publicKey = 5;
  int32 numberOfJourneys = 6;
}

message SearchResponse {
  repeated Journey journeys = 1;
}

message Journey {
  repeated Ride rides = 1;
}

message Ride {
  string rideId = 1;
  string providerId = 2;
  Transporter transporter = 3;
  string from = 4;
  string to = 5;
  google.protobuf.Timestamp startTime = 6;
  google.protobuf.Timestamp endTime = 7;
  bytes coefficient = 8;
  bytes discountRate = 9;
}

message Transporter {
  string providerId = 1;
  TransporterType transporterType = 2;
  bytes unitPrice = 3;
  UnitPriceType unitPriceType = 4;
  uint64 capacity = 5;
  bytes seatPrice = 6;
}

message BookingRequest {
  string ride_id = 1;
  int32 seatNumber = 2;
  BookingType bookingType = 3;
  InvoicingClerkType invoicingClerkType = 4;
  UnitPriceType unitPriceType = 5;
  bytes unitPrice = 6;
  bytes coefficient = 7;
  bytes discountRate = 8;
  bytes seatPrice = 9;
}
